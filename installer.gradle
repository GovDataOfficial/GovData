import com.seitenbau.ploy.install.config.ProcessPropertyTask
import com.seitenbau.ploy.install.shell.ShellCommands
import com.seitenbau.ploy.install.tasks.*
import com.seitenbau.ploy.install.install.*
import com.seitenbau.ploy.install.base.*

apply plugin: 'ploy-install-gradle'

buildscript {
    repositories {
        mavenLocal()
    }
    dependencies {
        classpath 'com.seitenbau.ploy:ploy-plugins-gradle:0.6.0-rc3'
    }
}

configurations { driver }
repositories {
    mavenLocal()
}

task stopApacheAndTomcat(type:ShellCommands) {
  phase( StopTask )
  doLast  {
    // Stop Apache
    sudo("/etc/init.d/apache2","stop")
    
    // Stop Tomcat
    sudo("/etc/init.d/tomcat7","stop")
  }
}

task startApacheAndTomcat(type:ShellCommands) {
  phase( StartTask )
  doLast  {
    // Start Apache
    sudo("/etc/init.d/apache2","start")
    queryStatus( http("http://localhost:5000/group",200) )
    
    // Start Liferay Tomcat
    sudo("/etc/init.d/tomcat7","start")
    queryStatus( http("http://localhost",200) )
  }
}

/* Deinstallation  */
task deinstallAll(type:OsPacketUnInstaller ) {
    phase( UninstallTask )
    uninstall("od-platform")
}

/* cleanup liferay database and data */
task cleanupDbAndData(type:PloyTask) {
    phase( CleanupDataTask )
    doLast {
      def tomcatPath = "/var/lib/tomcat7"
      def rmWebappBaseCmd = "sudo rm -r " + tomcatPath + "/webapps"
      // Remove liferay ODP portlets
      exec(rmWebappBaseCmd + "/rss-servlet")
      exec(rmWebappBaseCmd + "/manage-datasets-portlet")
      exec(rmWebappBaseCmd + "/govdata-theme")
      exec(rmWebappBaseCmd + "/search-gui-portlet")
      exec(rmWebappBaseCmd + "/properties-hook")
      exec(rmWebappBaseCmd + "/cache-scheduler")
      exec(rmWebappBaseCmd + "/boxes-portlet")
      exec(rmWebappBaseCmd + "/screennamevalidator-hook")
      exec(rmWebappBaseCmd + "/entities-portlet")
      exec(rmWebappBaseCmd + "/categories-grid-portlet")
      exec(rmWebappBaseCmd + "/dataset-portlet")
      exec(rmWebappBaseCmd + "/language-hook")
      exec(rmWebappBaseCmd + "/errorpages-hook")      
      exec(rmWebappBaseCmd + "/Layout20-80-layouttpl")        
      exec(rmWebappBaseCmd + "/gd-search")        
      
      // Remove tomcat cache
      exec("sudo rm -r " + tomcatPath + "/work/Catalina")
    }
}

/* install all  */
task installAll(type:OsPacketInstaller) {
    phase( InstallTask )
}

/* prepare stage specific configuration files */
task copyConfiguration(type:ProcessPropertyTask ) {
    phase( PrepareTask )
    doLast {
        util.ConfigFile
                .processEnvPropertyFile("cfg/portal-ext.properties","/tmp/portal-ext.properties")
                .increasePrivilegesGroupWrite()
                .process()
        exec("sudo cp /tmp/portal-ext.properties /var/lib/tomcat7/portal-ext.properties")
    }
}

def exec(String cmd) {
  println "# will execute : '${cmd}'"
  def process = ["sh", "-c", "${cmd}"].execute()
  process.inputStream.eachLine {println "# " + it}
  process.waitFor()
  println "# result: " + process.exitValue()
}